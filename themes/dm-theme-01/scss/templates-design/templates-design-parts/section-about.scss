@import "../../functions/mixins.scss";
@import "../../functions/functions.scss";

.dm-about {
  @include padding-x();
  overflow: hidden;

  > container {
    @include flex-row();
    @include flex-center();
    gap: var( --dm-spacing-large);

    > div {
      box-sizing: border-box;

      &:first-of-type {
        position: relative;
        width: 40%;
        z-index: 0;

        > img {
          width: 450px;
          max-width: 100%;
          height: auto;
          clip-path: polygon(0 0, 100% 0, 100% 82%, 0 82%);
          margin-left: var( --dm-spacing-primary );
        }
        > svg {
          position: absolute;
          z-index: -1;
          width: 360px;
          max-width: 80%;
          height: auto;
          top: 0%;
          left: 20%;
          transform: rotate(40deg);
          opacity: 0.2;
        }
        > span {
          position: absolute;
          z-index: -2;
          width: 100%;
          height: 100%;
          height: 400px;
          left: 0;
          bottom: 5.8%;
          background-image: linear-gradient(
              270deg,
              rgba(var( --dm-color-secondary-rgb ), 0),
              rgba(var( --dm-color-primary-rgb ), 0.6) 40%,
              rgba(var( --dm-color-secondary-rgb ), 1) 170%
          );
          clip-path: polygon(0 0, 100% 28%, 100% 100%, 0 100%);
        }
      }
      &:not(:first-of-type) {
        width: 60%;
        display: grid;
        gap: var( --dm-spacing-secondary );

        > h2 {
          @include dm-font-heading1();
          --dm-text-heading1-font-family: var(--dm-font-family-secondary);

          &:after {
            position: relative;
            display: block;
            content: "";
            width: 100%;
            max-width: var( --dm-spacing-small );
            height: 3px;
            background-color: var( --dm-color-primary );
            transition: max-width 0.3s;
            transition-delay: 0.3s;
            animation-duration: R2s;
            animation-timing-function: ease-in-out;
            animation-iteration-count: 1;
            animation-name: growDivider;
            animation-fill-mode: both;

          }
          &:hover {
            &:after {
              max-width: var( --dm-spacing-medium );
              transition: max-width 0.3s;
            }
          }
        }
        p {
          @include dm-font-default();
          word-break: break-word;

          @for $j from 1 through 3 {
            $delay: ($j - 1) * 0.1s;
            &:nth-of-type(#{$j}) {
              transition-delay: $delay;
            }
          }
        }
      }
    }
  }
  &[data-layout="standard"] {
    > container {
      > div {
        &:first-of-type {
          width: 30%;

          > img {
            width: 500px;
            max-width: 100%;
            clip-path: none;
            margin: 0px;
          }
          > svg {
            width: 100%;
            max-width: 500px;
            height: auto;
            left: 2%;
          }
          > span {
            width: 100%;
            height: 100%;
            clip-path: none;
            bottom: 0;
            background: var( --dm-color-white );
            background-image: none;
            display: none;
          }
        }
        &:last-of-type {
          width: 70%;
        }
      }
    }
    @media only screen and (max-width: $screen-desktop-medium) {
      > container {
        gap: var(--dm-spacing-tertiary);

        > div {
          &:first-of-type {
            width: 35%;
          }
          &:last-of-type {
            width: 65%;
          }
        }
      }
    }
    @media only screen and (max-width: $screen-desktop-small) {
      > container {
        align-items: start;

        > div {
          &:first-of-type {
            width: 30%;
          }
          &:last-of-type {
            width: 70%;
          }
        }
      }
    }
    @media only screen and (max-width: $screen-tablet-large) {
      > container {
        flex-direction: column;
        gap: var( --dm-spacing-secondary );

        > div {
          &:first-of-type {
            width: 100%;

            > img {
              width: 300px;
              max-width: 100%;
            }
            > svg {
              width: 300px;
            }
          }
          &:last-of-type {
            width: 100%;
          }
        }
      }
    }
    @media only screen and (max-width: $screen-phone-medium) {
      > container {
        > div {
          &:first-of-type {
            padding: var( --dm-spacing-primary ) var( --dm-spacing-primary ) 0 var( --dm-spacing-primary );
          }
        }
      }
    }
  }
  &[data-layout="compress"] {
    > container {
      > div {
        &:first-of-type {
          position: relative;

          > img {
            position: relative;
            box-sizing: border-box;
            @include border-radius( var( --dm-border-radius-secondary ));
            padding: var(  --dm-spacing-secondary ) var(  --dm-spacing-secondary ) 0px var(  --dm-spacing-secondary );
            background-image: -webkit-gradient(
                linear, left top, left bottom,
                color-stop(20%, rgba( var( --dm-color-primary-rgb ), 0 )),
                color-stop(50%, rgba( var( --dm-color-primary-rgb ), 0.8 )),
                color-stop(140%, rgba( var( --dm-color-secondary-rgb ), 1 ))
            );
          }
          > svg {
            width: 320px;
            max-width: 80%;
          }
          &:after {
            @include border-radius( 0 0  var( --dm-border-radius-secondary ) var( --dm-border-radius-secondary ));
            content: "";
            position: absolute;
            width: 450px;
            margin-left: var( --dm-spacing-primary );
            max-width: 100%;
            height: 15px;
            background-color: var(--dm-color-primary);
            bottom: calc(18% - 15px);
            left: 0;
            right: 0;
            z-index: 1;
          }
        }
      }
    }
    @media only screen and (max-width: $screen-desktop-medium) {
      > container {
        gap: var( --dm-spacing-tertiary);
      }
    }

    @media only screen and (max-width: $screen-tablet-large) {
      > container {
        flex-direction: column;
        gap: var( --dm-spacing-secondary );
        align-items: flex-start;

        > div {
          &:first-of-type {
            width: 300px;
            max-width: 100%;

            > img {
              width: 100%;
              max-width: 300px;
            }
            > svg {
              width: 200px;
            }
            > span {
              height: 300px;
            }
          }
          &:last-of-type {
            width: 100%;
          }
        }
      }
    }
    @media only screen and (max-width: $screen-phone-large) {
      > container {
        > div {
          &:first-of-type {
            > img {
              width: 200px;
            }
            > span {
              height: 200px;
            }
            > svg {
              width: 40%;
              height: auto;
            }
            &:after {
              width: 200px;
            }
          }
        }
      }
    }
    @media only screen and (max-width: $screen-phone-small) {
      > container {
        > div {
          &:first-of-type {
            > img {
              width: 150px;
            }
            > span {
              display: none;
            }
            &:after {
              width: 150px;
            }
          }
        }
      }
    }
  }
}

body, body.theme-light {
  .dm-about {
    > container {
      > div {
        > h2 {
          --dm-text-heading1-color: var( --dm-color-black );
        }
        > p {
          --dm-text-default-color: var( --dm-color-gray );
        }
        > svg {
          @include svg-color( var( --dm-background-color-gray-lighten ) );
        }
      }
    }
  }
}
body.theme-dark {
  .dm-about {
    > container {
      > div {
        > h2 {
          --dm-text-heading1-color: var( --dm-color-white );
        }
        > p {
          --dm-text-default-color: var( --dm-color-white );
        }
        > svg {
          @include svg-color( var( --dm-background-color-white ) );
        }
      }
    }
  }
}
